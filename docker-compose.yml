name: "weather-api-task"

services:
  nginx:
    image: nginx:1.27.3-alpine
    restart: unless-stopped
    depends_on:
      - php
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./public/:/var/www/html/public/
    ports:
      - "8000:80"

  php:
    build: docker/php
    restart: unless-stopped
    depends_on:
      - db
      - redis
    volumes:
      - ./:/var/www/html/

  node:
    build: docker/node
    restart: unless-stopped
    volumes:
      - ./:/var/www/app/
    ports:
      - "5173:5173"

  db:
    image: mysql:8.4.3
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql/
    environment:
      MYSQL_ROOT_PASSWORD: ${DOCKER_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DOCKER_MYSQL_DATABASE}
      MYSQL_USER: ${DOCKER_MYSQL_USERNAME}
      MYSQL_PASSWORD: ${DOCKER_MYSQL_PASSWORD}
      TZ: ${DOCKER_MYSQL_TIMEZONE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 5

  redis:
    image: redis:7.4.1-alpine
    restart: unless-stopped
    volumes:
      - redis_cache:/data/
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  pma:
    image: phpmyadmin:5.2.1
    restart: unless-stopped
    depends_on:
      - db
    environment:
      PMA_HOST: "db"
      PMA_USER: ${DOCKER_MYSQL_USERNAME}
      PMA_PASSWORD: ${DOCKER_MYSQL_PASSWORD}
    ports:
      - "8090:80"

volumes:
  mysql_data:
    driver: local
  redis_cache:
    driver: local
